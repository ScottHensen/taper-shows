service: taper-shows

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  memorySize: 128
  environment:
    DYNAMODB_TABLE: ${opt:stage, self:provider.stage}-${self:service}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/*"

functions:
  create:
    handler: handler.create
    events:
      - http:
          path: shows
          method: post
          cors: true
  getOneShow:
    handler: handler.getOneShow
    events:
      - http:
          path: shows/{showId}
          method: get
          cors: true
  getAllShows:
    handler: handler.getAllShows
    events:
      - http:
          path: shows
          method: get
          cors: true
  getAllShowsForBand:
    handler: handler.getAllShowsForBand
    events:
      - http:
          path: bands/{bandId}/shows
          method: get
          cors: true
  update:
    handler: handler.update
    events:
      - http:
          path: shows/{showId}
          method: put
          cors: true
  delete:
    handler: handler.delete
    events:
      - http:
          path: shows/{showId}
          method: delete
          cors: true
